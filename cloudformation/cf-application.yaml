AWSTemplateFormatVersion: "2010-09-09"
Description: ""
Resources:
  ECSTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        -
          Essential: true
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/tui-test-task-repo"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-create-group: "true"
              awslogs-group: "/ecs/test-task-api"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"
          Name: "tui-test-task-repo"
          PortMappings:
            -
              ContainerPort: 8080
              HostPort: 8080
              Protocol: "tcp"
          Secrets:
            -
              Name: "dev/tui-test-task-api"
              ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:dev/tui-test-task-api-rWwqOe"
      Family: "test-task-api"
      TaskRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: "1024"
      Memory: "3072"

  ECSService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: "test-task-api-service"
      Cluster: !GetAtt ECSCluster.Arn
      LoadBalancers:
        -
          TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
          ContainerName: "tui-test-task-repo"
          ContainerPort: 8080
      DesiredCount: 0
      PlatformVersion: "LATEST"
      TaskDefinition: !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/test-task-api:3"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          SecurityGroups:
            - !Ref EC2SecurityGroup2
          Subnets:
            - "subnet-029020772aa07f2e3"
            - "subnet-0fbfad1c669b7c313"
            - "subnet-07137f7099967dff1"
      HealthCheckGracePeriodSeconds: 30
      SchedulingStrategy: "REPLICA"
      DeploymentController:
        Type: "ECS"
      CapacityProviderStrategy:
        -
          CapacityProvider: "FARGATE"
          Weight: 1
          Base: 0

  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: "test-task-cluster"
      CapacityProviders:
        - "FARGATE"
        - "FARGATE_SPOT"

  ElasticLoadBalancingV2TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: "/actuator/health"
      Port: 8080
      Protocol: "HTTP"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 3
      TargetType: "ip"
      Matcher:
        HttpCode: "200"
      HealthyThresholdCount: 5
      VpcId: "vpc-09f70c8f26375036c"
      Name: "test-task-tg"
      HealthCheckEnabled: true
      TargetGroupAttributes:
        -
          Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.count"
          Value: "1"
        -
          Key: "stickiness.enabled"
          Value: "false"
        -
          Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage"
          Value: "off"
        -
          Key: "deregistration_delay.timeout_seconds"
          Value: "300"
        -
          Key: "target_group_health.dns_failover.minimum_healthy_targets.count"
          Value: "1"
        -
          Key: "stickiness.app_cookie.cookie_name"
          Value: ""
        -
          Key: "stickiness.type"
          Value: "lb_cookie"
        -
          Key: "stickiness.lb_cookie.duration_seconds"
          Value: "86400"
        -
          Key: "slow_start.duration_seconds"
          Value: "0"
        -
          Key: "stickiness.app_cookie.duration_seconds"
          Value: "86400"
        -
          Key: "target_group_health.dns_failover.minimum_healthy_targets.percentage"
          Value: "off"
        -
          Key: "load_balancing.cross_zone.enabled"
          Value: "use_load_balancer_configuration"
        -
          Key: "load_balancing.algorithm.type"
          Value: "round_robin"

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "ELB-to-ECS-sg"
      GroupName: "ELB-to-ECS-sg"
      VpcId: "vpc-09f70c8f26375036c"
      SecurityGroupIngress:
        -
          CidrIp: "0.0.0.0/0"
          FromPort: 8080
          IpProtocol: "tcp"
          ToPort: 8080
        -
          CidrIpv6: "::/0"
          FromPort: 8080
          IpProtocol: "tcp"
          ToPort: 8080
      SecurityGroupEgress:
        -
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  EC2SecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "sg"
      GroupName: "test-task-sg"
      VpcId: "vpc-09f70c8f26375036c"
      SecurityGroupIngress:
        -
          SourceSecurityGroupId: !Ref EC2SecurityGroup
          SourceSecurityGroupOwnerId: !Ref AWS::AccountId
          FromPort: 0
          IpProtocol: "tcp"
          ToPort: 65535
      SecurityGroupEgress:
        -
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  ElasticLoadBalancingV2ListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Priority: "1"
      ListenerArn: !Ref ElasticLoadBalancingV2Listener
      Conditions:
        -
          Field: "path-pattern"
          Values:
            - "/actuator"
      Actions:
        -
          Type: "forward"
          TargetGroupArn: !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/blue-green-${ECSCluster}-1/c56bdf4256fd3dad"
          ForwardConfig:
            TargetGroups:
              -
                TargetGroupArn: !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/blue-green-${ECSCluster}-1/c56bdf4256fd3dad"
                Weight: 100
            TargetGroupStickinessConfig:
              Enabled: false

  ElasticLoadBalancingV2Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
      Port: 8080
      Protocol: "HTTP"
      DefaultActions:
        -
          TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
          Type: "forward"

  ElasticLoadBalancingV2LoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: "test-task-alb"
      Scheme: "internet-facing"
      Type: "application"
      Subnets:
        - "subnet-029020772aa07f2e3"
        - "subnet-07137f7099967dff1"
        - "subnet-0fbfad1c669b7c313"
      SecurityGroups:
        - !Ref EC2SecurityGroup
      IpAddressType: "ipv4"
      LoadBalancerAttributes:
        -
          Key: "access_logs.s3.enabled"
          Value: "false"
        -
          Key: "idle_timeout.timeout_seconds"
          Value: "60"
        -
          Key: "deletion_protection.enabled"
          Value: "false"
        -
          Key: "routing.http2.enabled"
          Value: "true"
        -
          Key: "routing.http.drop_invalid_header_fields.enabled"
          Value: "false"
        -
          Key: "routing.http.xff_client_port.enabled"
          Value: "false"
        -
          Key: "routing.http.preserve_host_header.enabled"
          Value: "false"
        -
          Key: "routing.http.xff_header_processing.mode"
          Value: "append"
        -
          Key: "load_balancing.cross_zone.enabled"
          Value: "true"
        -
          Key: "routing.http.desync_mitigation_mode"
          Value: "defensive"
        -
          Key: "waf.fail_open.enabled"
          Value: "false"
        -
          Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
          Value: "false"

  ApiGatewayRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "tui-test-task-api-gateway"
      Description: "Your first API with Amazon API Gateway. This is a sample API that integrates via HTTP with our demo Pet Store endpoints"
      ApiKeySourceType: "HEADER"
      EndpointConfiguration:
        Types:
          - "REGIONAL"

  SecretsManagerSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: "/dev/tui-test-task-api"
      SecretString: "REPLACEME"

  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: "tui-test-task-api"
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 7
      LambdaConfig: {}
      Schema:
        -
          Name: "sub"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: false
          Required: true
          StringAttributeConstraints:
            MinLength: "1"
            MaxLength: "2048"
        -
          Name: "name"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "given_name"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "family_name"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "middle_name"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "nickname"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "preferred_username"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "profile"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "picture"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "website"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "email"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "email_verified"
          AttributeDataType: "Boolean"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
        -
          Name: "gender"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "birthdate"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "10"
            MaxLength: "10"
        -
          Name: "zoneinfo"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "locale"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "phone_number"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "phone_number_verified"
          AttributeDataType: "Boolean"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
        -
          Name: "address"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
        -
          Name: "updated_at"
          AttributeDataType: "Number"
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          NumberAttributeConstraints:
            MinValue: "0"
      AutoVerifiedAttributes:
        - "email"
      MfaConfiguration: "OFF"
      EmailConfiguration:
        EmailSendingAccount: "COGNITO_DEFAULT"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UserPoolTags: {}
      AccountRecoverySetting:
        RecoveryMechanisms:
          -
            Priority: 1
            Name: "verified_email"
          -
            Priority: 2
            Name: "verified_phone_number"
      UsernameConfiguration:
        CaseSensitive: false
      VerificationMessageTemplate:
        DefaultEmailOption: "CONFIRM_WITH_CODE"

